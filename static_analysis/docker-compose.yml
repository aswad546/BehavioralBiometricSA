services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    # command: uvicorn main:app --host 0.0.0.0 --port 8100
    ports:
      - "8100:8100"
    environment:
      - DB_HOST=192.168.152.115
      - DB_PORT=5434
      - DB_NAME=vv8_backend
      - DB_USER=vv8
      - DB_PASSWORD=vv8
      - DB_WRITE_MODE=immediate
      - DROP_TABLE=false
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_QUEUE=job_queue
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  worker:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.worker
    # command: python3 queue_worker.py
    environment:
      - DB_HOST=192.168.152.115
      - DB_PORT=5434
      - DB_NAME=vv8_backend
      - DB_USER=vv8
      - DB_PASSWORD=vv8
      - DB_WRITE_MODE=immediate
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_QUEUE=job_queue
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5762:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: vv8_backend
      POSTGRES_USER: vv8
      POSTGRES_PASSWORD: vv8
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vv8 -d vv8_backend"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
