services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    # command: uvicorn main:app --host 0.0.0.0 --port 8100
    ports:
      - "8100:8100"
    environment:
      - DB_HOST=172.17.0.1
      - DB_PORT=5434
      - DB_NAME=vv8_backend
      - DB_USER=vv8
      - DB_PASSWORD=vv8
      - DB_WRITE_MODE=immediate
      - DROP_TABLE=false
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_QUEUE=job_queue
    depends_on:
      # postgres:
      #   condition: service_healthy
      rabbitmq:
        condition: service_healthy

  worker:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.worker
    # command: python3 queue_worker.py
    deploy:
      mode: replicated
      replicas: 100
    environment:
      - DB_HOST=172.17.0.1
      - DB_PORT=5434
      - DB_NAME=vv8_backend
      - DB_USER=vv8
      - DB_PASSWORD=vv8
      - DB_WRITE_MODE=immediate
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_QUEUE=job_queue
    depends_on:
      # postgres:
      #   condition: service_healthy
      rabbitmq:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 50

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5762:5672"
      - "15672:15672"
    privileged: true
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Promtail to scrape Docker container logs
  promtail:
    image: grafana/promtail:3.4.1
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - promtail_home:/mnt/config
    command: -config.file=/mnt/config/promtail-config.yaml

  # postgres:
  #   image: postgres:14-alpine
  #   environment:
  #     POSTGRES_DB: vv8_backend
  #     POSTGRES_USER: vv8
  #     POSTGRES_PASSWORD: vv8
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U vv8 -d vv8_backend"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

volumes:
  promtail_home:
    driver: local
    driver_opts:
      type: nfs
      o: addr=172.19.156.24,rw
      device: ":/home/a8tariq/BehavioralBiometricSA/static_analysis/promtail"
#   pgdata:
